#!/usr/bin/perl -w
#
# bmpedit - apply input stream of edits to a .bmp image file
#
use Image::BMP;

my $colors =   # snarfed from nanocad/Color.cpp
{
    "black"                     => 0x000000,
    "white"                     => 0xFFFFFF,
    "red"			=> 0xFF0000,
    "maroon"  			=> 0x800000,
    "dark red"  		=> 0x8B0000,
    "brown"  			=> 0xA52A2A,
    "firebrick"  		=> 0xB22222,
    "crimson"  			=> 0xDC143C,
    "red"  			=> 0xFF0000,
    "tomato"  			=> 0xFF6347,
    "coral"  			=> 0xFF7F50,
    "indian red"  		=> 0xCD5C5C,
    "light coral"  		=> 0xF08080,
    "dark salmon"  		=> 0xE9967A,
    "salmon"  			=> 0xFA8072,
    "light salmon"  		=> 0xFFA07A,
    "orange red"  		=> 0xFF4500,
    "dark orange"  		=> 0xFF8C00,
    "orange"  			=> 0xFFA500,
    "gold"  			=> 0xFFD700,
    "dark golden rod"  		=> 0xB8860B,
    "golden rod"  		=> 0xDAA520,
    "pale golden rod"  		=> 0xEEE8AA,
    "dark khaki"  		=> 0xBDB76B,
    "khaki"  			=> 0xF0E68C,
    "olive"  			=> 0x808000,
    "yellow"  			=> 0xFFFF00,
    "yellow green"  		=> 0x9ACD32,
    "dark olive green" 		=> 0x556B2F,
    "olive drab"  		=> 0x6B8E23,
    "lawn green"  		=> 0x7CFC00,
    "chart reuse"  		=> 0x7FFF00,
    "green yellow"  		=> 0xADFF2F,
    "dark green"  		=> 0x006400,
    "green"  			=> 0x008000,
    "forest green"  		=> 0x228B22,
    "lime"  			=> 0x00FF00,
    "lime green"  		=> 0x32CD32,
    "light green"  		=> 0x90EE90,
    "pale green"  		=> 0x98FB98,
    "dark sea green"  		=> 0x8FBC8F,
    "medium spring green"  	=> 0x00FA9A,
    "spring green"  		=> 0x00FF7F,
    "sea green"  		=> 0x2E8B57,
    "medium aqua marine"  	=> 0x66CDAA,
    "medium sea green"  	=> 0x3CB371,
    "light sea green"  		=> 0x20B2AA,
    "dark slate gray"  		=> 0x2F4F4F,
    "dark gray"  		=> 0x2F2F2F,
    "gray"  			=> 0x808080,
    "teal"  			=> 0x008080,
    "dark cyan"  		=> 0x008B8B,
    "cyan"			=> 0x00FFFF,
    "aqua"  			=> 0x00FFFF,
    "blue"			=> 0x0000FF,
    "white"			=> 0xFFFFFF,
};

my $base = shift @ARGV or die "ERROR: bmpedit <basename>\n";
my $bmp  = $base . ".bmp";
print "Reading $bmp...\n";
my $img = new Image::BMP(
        file            => $bmp,
        debug           => 1,
        );

my $edited = $base . "_edited.bmp";

while( <> )
{
    /^\s*#/ and next;

    my $line = $_;
    s/^\s*(\w+)\s+// or die "ERROR: no command found on line: $line";
    my $cmd = lc( $1 );

    if ( $cmd eq "pixel" ) {
        /(\w+)\s+(\w+)\s+(.+)\s*/ or die "ERROR: bad pixel command: $line";
        my $x = hex( $1 );
	my $y = hex( $2 );
	my $rgb = $3;
	
	$x >= 0 && $x < $img->{Width}  or die "ERROR: pixel x out of range: $line";
	$y >= 0 && $y < $img->{Height} or die "ERROR: pixel y out of range: $line";

	if ( defined $colors->{$rgb} ) {
	    $rgb = $colors->{$rgb};
	} elsif ( $rgb =~ /^[0-9a-f]+/) {
	    $rgb = hex( $rgb );
	} else {
            die "ERROR: unknown color name: $line\n";
        }

	$img->xy( $x, $y, $rgb );

    } elsif ( $cmd eq "line" ) {
        /(\w+)\s+(\w+)\s+(\w+)\s+(\w+)\s+(.+)\s*/ or die "ERROR: bad line command: $line";
        my $x0 = hex( $1 );
	my $y0 = hex( $2 );
        my $x1 = hex( $3 );
	my $y1 = hex( $4 );
	my $rgb = $5;
	
	$x0 >= 0 && $x0 < $img->{Width}  or die "ERROR: pixel x0 out of range: $line";
	$y0 >= 0 && $y0 < $img->{Height} or die "ERROR: pixel y0 out of range: $line";
	$x1 >= 0 && $x1 < $img->{Width}  or die "ERROR: pixel x1 out of range: $line";
	$y1 >= 0 && $y1 < $img->{Height} or die "ERROR: pixel y1 out of range: $line";

	if ( defined $colors->{$rgb} ) {
	    $rgb = $colors->{$rgb};
	} else {
	    $rgb = hex( $rgb );
	}

	if ( $x0 == $x1 ) {
	    $y0 > $y1 and ($y0, $y1) = ($y1, $y0);
	    for my $y ( $y0 .. $y1 ) 
	    {
	        $img->xy( $x0, $y, $rgb );
	    }
	} elsif ( $y0 == $y1 ) {
	    $x0 > $x1 and ($x0, $x1) = ($x1, $x0);
	    for my $x ( $x0 .. $x1 ) 
	    {
	        $img->xy( $x, $y0, $rgb );
	    }
        } else {
	    die "ERROR: sorry, can't handle slanted lines yet: $line";
	}
    } else {
        die "ERROR: unknown command: $line";
    }
}    

print "Saving edits to $edited...\n";
$img->save( $edited );
exit 0;
