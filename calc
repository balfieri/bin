#!/usr/bin/perl -w
#
use Math::Trig;
use Date::Parse;

sub log2 { log( $_[0] ) / log( 2 ) }

sub f2c  { ($_[0] - 32.0) * 5.0/9.0 }
sub c2f  { $_[0] * 9.0/5.0 + 32     }

sub k2m  { $_[0] * 0.6213712 }
sub m2k  { $_[0] / 0.6213712 }
sub k2p  { $_[0] / 0.4535924 }
sub p2k  { $_[0] * 0.4535924 }
sub o2g  { p2k($_[0]/16.0) * 1000.0 }
sub g2o  { k2p($_[0]/1000.0) * 16.0 }
sub i2m  { $_[0] * 0.0254 }
sub m2i  { $_[0] / 0.0254 }
sub f2m  { i2m( 12* $_[0] ) }
sub m2f  { m2i( $_[0] ) / 12.0 }
sub bmi  { $_[0] / ($_[1]*$_[1]) }

sub nv2mc { $_[0]/240.63*594.356 }
sub mc2nv { $_[0]/594.356*240.63 }

sub sum  { my $s = 0.0; for(@_) { $s += $_; } return $s; }
sub cagr { (($_[1]/$_[0])**(1./$_[2]) - 1.0) * 100.0 }  # BV, EV, N
sub fv   { $_[0] * (1.0 + $_[1]/100.0)**$_[2] }
sub pv   { $_[0] / (1.0 + $_[1]/100.0)**$_[2] }
sub lfv # loan future value  
{
    my $L  = shift; # loan amount for first period
    my $N  = shift; # number of periods
    my $LR = shift; # loan rate of increase
    my $IR = shift; # interest rate per period

    $fv = 0.0;
    for ( 0 .. $N-1) {
        $fv += $L;
        $L *= (1.0 + $LR/100.0);
        $fv *= (1.0 + $IR/100.0);
    }
    return $fv;
}

sub d2s  { str2time( $_[0] ) }
sub dayssince { (d2s(`date`) - d2s($_[0])) / (3600*24) }

my $expr = join( " ", @ARGV );
my $val  = eval( $expr );
printf "%d      %0.30f  0x%x  0b%b\n", $val, $val, $val, $val;
